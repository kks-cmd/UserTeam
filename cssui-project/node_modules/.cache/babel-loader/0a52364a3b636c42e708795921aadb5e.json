{"remainingRequest":"D:\\10_vuespaces\\cssui-project\\node_modules\\babel-loader\\lib\\index.js!D:\\10_vuespaces\\cssui-project\\src\\http\\moudules\\student.js","dependencies":[{"path":"D:\\10_vuespaces\\cssui-project\\src\\http\\moudules\\student.js","mtime":1594287736830},{"path":"D:\\10_vuespaces\\cssui-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\10_vuespaces\\cssui-project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _mock = require('mockjs');\n\nimport qs from 'qs';\n/* \r\n * 学生管理模块\r\n */\n\nvar studentData = {\n  totalRows: 100,\n  results: []\n};\n\nfor (var i = 0; i < studentData.totalRows; i++) {\n  var item = {\n    \"uuid\": _mock.Random.guid(),\n    \"name\": _mock.Random.cname(),\n    \"sex\": _mock.Random.integer(1, 2),\n    \"birthday\": _mock.Random.date('yyyy-MM-dd'),\n    \"school\": _mock.Random.string(2, 8),\n    \"email\": _mock.Random.email(),\n    \"phone\": _mock.Random.integer(10000000000, 99999999999)\n  };\n  studentData.results.push(item);\n} // 添加\n\n\nexport var addStudent = function addStudent(data) {\n  return {\n    url: '/rest/student/addStudent',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      studentData.results.push(qparams);\n      studentData.totalRows++;\n      qparams['uuid'] = _mock.Random.guid();\n      return qparams;\n    }\n  };\n}; // 修改\n\nexport var updStudent = function updStudent(data) {\n  return {\n    url: '/rest/student/updStudent',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      return qparams;\n    }\n  };\n}; // 删除\n\nexport var delStudent = function delStudent(data) {\n  return {\n    url: '/rest/student/delStudent',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      return qparams;\n    }\n  };\n}; // 分页查询\n\nexport var dirStudent = function dirStudent(data) {\n  return {\n    url: '/rest/student/dirStudent',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      var rData = RandomData(qparams.page.pageSize);\n      return {\n        \"results\": rData.results,\n        \"totalRows\": rData.totalRows\n      };\n    }\n  };\n};\n\nfunction RandomData(pageSize) {\n  var size = 10;\n\n  if (pageSize) {\n    size = pageSize;\n  }\n\n  var results = [];\n\n  for (var i = 0; i < size; i++) {\n    var item = {\n      \"uuid\": _mock.Random.guid(),\n      \"name\": _mock.Random.cname(),\n      \"sex\": _mock.Random.integer(1, 2),\n      \"birthday\": _mock.Random.date('yyyy-MM-dd'),\n      \"school\": _mock.Random.string(2, 8),\n      \"email\": _mock.Random.email(),\n      \"phone\": _mock.Random.integer(10000000000, 99999999999)\n    };\n    results.push(item);\n  }\n\n  return {\n    'totalRows': studentData.totalRows,\n    'results': results\n  };\n} // 查看\n\n\nexport var getStudent = function getStudent(data) {\n  return {\n    url: '/rest/student/getStudent',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      var res = {\n        \"uuid\": null,\n        \"name\": \"\",\n        \"sex\": \"1\",\n        \"birthday\": _mock.Random.date('yyyy-MM-dd'),\n        \"school\": \"\",\n        \"email\": '',\n        \"phone\": \"\"\n      };\n\n      if (qparams.uuid) {\n        res = {\n          \"uuid\": _mock.Random.guid(),\n          \"name\": _mock.Random.cname(),\n          \"sex\": _mock.Random.integer(1, 2),\n          \"birthday\": _mock.Random.date('yyyy-MM-dd'),\n          \"school\": _mock.Random.cname(),\n          \"email\": _mock.Random.email(),\n          \"phone\": _mock.Random.integer(10000000000, 99999999999)\n        };\n      }\n\n      return res;\n    }\n  };\n};",{"version":3,"sources":["D:/10_vuespaces/cssui-project/src/http/moudules/student.js"],"names":["mock","require","qs","studentData","totalRows","results","i","item","Random","guid","cname","integer","date","string","email","push","addStudent","data","url","method","openMock","params","qparams","JSON","parse","updStudent","delStudent","dirStudent","rData","RandomData","page","pageSize","size","getStudent","res","uuid"],"mappings":"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","sourcesContent":["var mock = require('mockjs')\r\nimport qs from 'qs'\r\n/* \r\n * 学生管理模块\r\n */\r\n const studentData={\r\n    totalRows:100,\r\n    results:[]\r\n}\r\nfor(var i=0;i<studentData.totalRows;i++){\r\n    var item={ \"uuid\": mock.Random.guid(), \"name\": mock.Random.cname(), \"sex\": mock.Random.integer(1,2),\"birthday\": mock.Random.date('yyyy-MM-dd'),\"school\":mock.Random.string(2,8),\"email\": mock.Random.email(),  \"phone\": mock.Random.integer(10000000000,99999999999) }\r\n    studentData.results.push(item);\r\n}\r\n// 添加\r\nexport const addStudent = (data) => {\r\n    return {\r\n        url: '/rest/student/addStudent',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            studentData.results.push(qparams);\r\n            studentData.totalRows++;\r\n            qparams['uuid']=mock.Random.guid();\r\n            return qparams\r\n        }\r\n    }\r\n}\r\n// 修改\r\nexport const updStudent = (data) => {\r\n    return {\r\n        url: '/rest/student/updStudent',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            return qparams\r\n        }\r\n    }\r\n}\r\n\r\n// 删除\r\nexport const delStudent = (data) => {\r\n    return {\r\n        url: '/rest/student/delStudent',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            return qparams\r\n        }\r\n    }\r\n}\r\n// 分页查询\r\nexport const dirStudent = (data) => {\r\n    return {\r\n        url: '/rest/student/dirStudent',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params)\r\n            var rData=RandomData(qparams.page.pageSize);\r\n            return { \r\n                \"results\": rData.results,\r\n                \"totalRows\": rData.totalRows\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction RandomData(pageSize){\r\n    var size=10;\r\n    if(pageSize){\r\n        size=pageSize;\r\n    }\r\n    var results=[];\r\n    for(var i=0;i<size;i++){\r\n        var item={\"uuid\": mock.Random.guid(), \"name\": mock.Random.cname(), \"sex\": mock.Random.integer(1,2),\"birthday\": mock.Random.date('yyyy-MM-dd'),\"school\":mock.Random.string(2,8),\"email\": mock.Random.email(),  \"phone\": mock.Random.integer(10000000000,99999999999) }\r\n        results.push(item);\r\n    }\r\n    return {\r\n        'totalRows':studentData.totalRows,\r\n        'results':results\r\n    };\r\n}\r\n// 查看\r\nexport const getStudent = (data) => {\r\n    return {\r\n        url: '/rest/student/getStudent',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            var res={ \"uuid\": null, \"name\": \"\", \"sex\": \"1\", \"birthday\":mock.Random.date('yyyy-MM-dd'), \"school\": \"\", \"email\":'',\"phone\": \"\" } \r\n            if(qparams.uuid){\r\n                res={ \"uuid\": mock.Random.guid(), \"name\": mock.Random.cname(), \"sex\": mock.Random.integer(1,2),\"birthday\": mock.Random.date('yyyy-MM-dd'),\"school\":mock.Random.cname(),\"email\": mock.Random.email(),  \"phone\": mock.Random.integer(10000000000,99999999999) }; \r\n            }\r\n            return res;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}]}