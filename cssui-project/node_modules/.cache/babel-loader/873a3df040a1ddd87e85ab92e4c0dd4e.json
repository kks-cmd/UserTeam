{"remainingRequest":"D:\\10_vuespaces\\cssui-project\\node_modules\\babel-loader\\lib\\index.js!D:\\10_vuespaces\\cssui-project\\src\\http\\moudules\\newstypes.js","dependencies":[{"path":"D:\\10_vuespaces\\cssui-project\\src\\http\\moudules\\newstypes.js","mtime":1602309368524},{"path":"D:\\10_vuespaces\\cssui-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\10_vuespaces\\cssui-project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _mock = require('mockjs');\n\nimport qs from 'qs';\n/* \r\n * 新闻分类http请求模块\r\n */\n\nvar newstypesData = {\n  totalRows: 100,\n  results: []\n}; // 添加\n\nexport var addNewsTypes = function addNewsTypes(data) {\n  return {\n    url: '/rest/newsTypes/addNewsTypes',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      newstypesData.results.push(qparams);\n      newstypesData.totalRows++;\n      qparams['uuid'] = _mock.Random.guid();\n      return qparams;\n    }\n  };\n}; //修改\n\nexport var updNewsTypes = function updNewsTypes(data) {\n  return {\n    url: '/rest/newsTypes/updNewsTypes',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      return qparams;\n    }\n  };\n}; // 删除\n\nexport var delNewsTypes = function delNewsTypes(data) {\n  return {\n    url: '/rest/newsTypes/delNewsTypes',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      newstypesData.totalRows--;\n      return params;\n    }\n  };\n}; // 分页查询\n\nexport var dirNewsTypes = function dirNewsTypes(data) {\n  return {\n    url: '/rest/newsTypes/dirNewsTypes',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      var rData = RandomPageData(qparams.page.pageSize);\n      return rData;\n    }\n  };\n}; //查看\n\nexport var getNewsTypes = function getNewsTypes(data) {\n  return {\n    url: '/rest/newsTypes/getNewsTypes',\n    method: 'get',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      var res = qparams;\n\n      if (qparams.uuid != null) {\n        res = {\n          \"uuid\": _mock.Random.guid(),\n          \"name\": _mock.Random.cword(5, 7),\n          \"parentId\": _mock.Random.guid(),\n          \"code\": _mock.Random.word(1, 7),\n          \"tableName\": _mock.Random.word(1, 7),\n          \"remark\": _mock.Random.csentence(2, 10),\n          \"orderNum\": _mock.Random.integer(1, 10),\n          \"tableType\": _mock.Random.integer(1, 2)\n        };\n      }\n\n      return res;\n    }\n  };\n}; //获取字典树\n\nexport var jsonNewsTypesTree = function jsonNewsTypesTree(data) {\n  return {\n    url: '/rest/newsTypes/jsonNewsTypesTree',\n    method: 'get',\n    data: data,\n    openMock: true,\n    mock: function mock() {\n      return [{\n        \"id\": \"0\",\n        \"value\": \"0\",\n        \"name\": \"所有\",\n        \"pId\": \"0\",\n        \"isLeaf\": false,\n        \"isParent\": true,\n        \"data\": \"\",\n        \"open\": true\n      }, {\n        \"id\": \"369b46a39e3b44f7911a58d862e8340e\",\n        \"value\": \"369b46a39e3b44f7911a58d862e8340e\",\n        \"name\": \"1\",\n        \"pId\": \"0\",\n        \"isLeaf\": true,\n        \"isParent\": false,\n        \"data\": \"\",\n        \"open\": true\n      }, {\n        \"id\": \"1\",\n        \"value\": \"1\",\n        \"name\": \"技术专栏\",\n        \"pId\": \"0\",\n        \"isLeaf\": false,\n        \"isParent\": true,\n        \"data\": \"\",\n        \"open\": true\n      }, {\n        \"id\": \"6\",\n        \"value\": \"6\",\n        \"name\": \"Web前端\",\n        \"pId\": \"1\",\n        \"isLeaf\": true,\n        \"isParent\": false,\n        \"data\": \"\",\n        \"open\": true\n      }, {\n        \"id\": \"317c9f98b29f4006b45ab7ccffacd7ae\",\n        \"value\": \"317c9f98b29f4006b45ab7ccffacd7ae\",\n        \"name\": \"部门资讯\",\n        \"pId\": \"1\",\n        \"isLeaf\": false,\n        \"isParent\": true,\n        \"data\": \"\",\n        \"open\": true\n      }, {\n        \"id\": \"aab16111569a4d1e8e94565d61fd24cf\",\n        \"value\": \"aab16111569a4d1e8e94565d61fd24cf\",\n        \"name\": \"业务部\",\n        \"pId\": \"317c9f98b29f4006b45ab7ccffacd7ae\",\n        \"isLeaf\": true,\n        \"isParent\": false,\n        \"data\": \"\",\n        \"open\": true\n      }, {\n        \"id\": \"2111fab0b6cf497493087b4185f5ee22\",\n        \"value\": \"2111fab0b6cf497493087b4185f5ee22\",\n        \"name\": \"架构部\",\n        \"pId\": \"317c9f98b29f4006b45ab7ccffacd7ae\",\n        \"isLeaf\": true,\n        \"isParent\": false,\n        \"data\": \"\",\n        \"open\": true\n      }, {\n        \"id\": \"159adbb4026a4e9490c09a34b420031b\",\n        \"value\": \"159adbb4026a4e9490c09a34b420031b\",\n        \"name\": \"Web前端\",\n        \"pId\": \"1\",\n        \"isLeaf\": true,\n        \"isParent\": false,\n        \"data\": \"\",\n        \"open\": true\n      }, {\n        \"id\": \"40d0264e548b4803a0c811da864f5355\",\n        \"value\": \"40d0264e548b4803a0c811da864f5355\",\n        \"name\": \"其他栏目\",\n        \"pId\": \"0\",\n        \"isLeaf\": false,\n        \"isParent\": true,\n        \"data\": \"\",\n        \"open\": true\n      }, {\n        \"id\": \"00748fad695d4cd497d511bedd37c083\",\n        \"value\": \"00748fad695d4cd497d511bedd37c083\",\n        \"name\": \"技术专栏\",\n        \"pId\": \"40d0264e548b4803a0c811da864f5355\",\n        \"isLeaf\": true,\n        \"isParent\": false,\n        \"data\": \"\",\n        \"open\": true\n      }, {\n        \"id\": \"6fdf00061870482480e8232fef981aa2\",\n        \"value\": \"6fdf00061870482480e8232fef981aa2\",\n        \"name\": \"生活娱乐\",\n        \"pId\": \"40d0264e548b4803a0c811da864f5355\",\n        \"isLeaf\": true,\n        \"isParent\": false,\n        \"data\": \"\",\n        \"open\": true\n      }, {\n        \"id\": \"133c82dd7e3e44a89197bcc8bb3db541\",\n        \"value\": \"133c82dd7e3e44a89197bcc8bb3db541\",\n        \"name\": \"其他\",\n        \"pId\": \"40d0264e548b4803a0c811da864f5355\",\n        \"isLeaf\": true,\n        \"isParent\": false,\n        \"data\": \"\",\n        \"open\": true\n      }];\n    }\n  };\n};\nexport var saveNewsTypesTree = function saveNewsTypesTree(data) {\n  return {\n    url: '/rest/newsTypes/saveNewsTypesTree',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock() {\n      return null;\n    }\n  };\n}; //生成随机分页数据\n\nfunction RandomPageData(pageSize) {\n  var size = 10;\n\n  if (pageSize) {\n    size = pageSize;\n  }\n\n  var results = [];\n\n  for (var i = 0; i < size; i++) {\n    var item = {\n      \"uuid\": _mock.Random.guid(),\n      \"name\": _mock.Random.cword(5, 7),\n      \"viewTypeId\": _mock.Random.integer(1, 2),\n      \"code\": _mock.Random.word(1, 7),\n      \"tableName\": _mock.Random.word(1, 7),\n      \"description\": _mock.Random.csentence(2, 10),\n      \"orderNo\": _mock.Random.integer(1, 10),\n      \"iconUrl\": _mock.Random.integer(1, 2),\n      \"createTime\": _mock.Random.date('yyyy-MM-dd'),\n      \"updateTime\": _mock.Random.date('yyyy-MM-dd')\n    };\n    results.push(item);\n  }\n\n  return {\n    'totalRows': newstypesData.totalRows,\n    'results': results\n  };\n}\n\nexport var loadNewsTypesGrid = function loadNewsTypesGrid(data) {\n  return {\n    url: '/rest/newsTypes/loadNewsTypesGrid',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      return [{\n        \"orderNO\": 1,\n        \"uuid\": \"1\",\n        \"name\": \"技术专栏\",\n        \"description\": \"技术专栏a\",\n        \"level\": \"1\",\n        \"viewTypeId\": \"2\",\n        \"iconUrl\": \"fa fa-fw fa-clone\",\n        \"treeCol\": \"33b9e37e990e6e1600650ca0d4e644b1\",\n        \"color\": \"#0070C0\"\n      }, {\n        \"orderNO\": 2,\n        \"uuid\": \"2\",\n        \"name\": \"生活娱乐\",\n        \"description\": \"生活娱乐b\",\n        \"level\": \"2\",\n        \"viewTypeId\": \"2\",\n        \"iconUrl\": \"fa fa-fw fa-cc-jcb\",\n        \"treeCol\": \"da352a726cda71cec283cf95790c91ef\",\n        \"color\": \"#00B050\"\n      }, {\n        \"orderNO\": 3,\n        \"uuid\": \"3\",\n        \"name\": \"部门资讯\",\n        \"description\": \"部门资讯c\",\n        \"level\": \"3\",\n        \"viewTypeId\": \"1\",\n        \"iconUrl\": \"fa fa-fw fa-chrome\",\n        \"treeCol\": \"580cf48b506eb70670df46d22ce34224\",\n        \"color\": \"#FFC000\"\n      }, {\n        \"orderNO\": 4,\n        \"uuid\": \"4\",\n        \"name\": \"其他栏目\",\n        \"description\": \"其他栏目d\",\n        \"level\": \"1\",\n        \"viewTypeId\": \"1\",\n        \"iconUrl\": \"fa fa-fw fa-amazon\",\n        \"treeCol\": \"\",\n        \"color\": \"#7030A0\"\n      }];\n    }\n  };\n};\nexport var saveNewsTypesGrid = function saveNewsTypesGrid(data) {\n  return {\n    url: '/rest/newsTypes/saveNewsTypesGrid',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      return params;\n    }\n  };\n};",{"version":3,"sources":["D:/10_vuespaces/cssui-project/src/http/moudules/newstypes.js"],"names":["mock","require","qs","newstypesData","totalRows","results","addNewsTypes","data","url","method","openMock","params","qparams","JSON","parse","push","Random","guid","updNewsTypes","delNewsTypes","dirNewsTypes","rData","RandomPageData","page","pageSize","getNewsTypes","res","uuid","cword","word","csentence","integer","jsonNewsTypesTree","saveNewsTypesTree","size","i","item","date","loadNewsTypesGrid","saveNewsTypesGrid"],"mappings":"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","sourcesContent":["var mock = require('mockjs')\r\nimport qs from 'qs'\r\n/* \r\n * 新闻分类http请求模块\r\n */\r\nconst newstypesData={\r\n    totalRows:100,\r\n    results:[]\r\n}\r\n// 添加\r\nexport const addNewsTypes = (data) => {\r\n    return {\r\n        url: '/rest/newsTypes/addNewsTypes',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n          var qparams=JSON.parse(params);\r\n          newstypesData.results.push(qparams);\r\n          newstypesData.totalRows++;\r\n          qparams['uuid']=mock.Random.guid();\r\n          return qparams\r\n        }\r\n    }\r\n}\r\n//修改\r\nexport const updNewsTypes = (data) => {\r\n    return {\r\n        url: '/rest/newsTypes/updNewsTypes',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n          return qparams\r\n        }\r\n    }\r\n}\r\n// 删除\r\nexport const delNewsTypes = (data) => {\r\n    return {\r\n        url: '/rest/newsTypes/delNewsTypes',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            newstypesData.totalRows--;\r\n            return params\r\n        }\r\n    }\r\n}\r\n// 分页查询\r\nexport const dirNewsTypes = (data) => {\r\n    return {\r\n        url: '/rest/newsTypes/dirNewsTypes',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            var rData=RandomPageData(qparams.page.pageSize);\r\n            return rData\r\n        }\r\n    }\r\n}\r\n//查看\r\nexport const getNewsTypes = (data) => {\r\n    return {\r\n        url: '/rest/newsTypes/getNewsTypes',\r\n        method: 'get',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){ \r\n            var qparams=JSON.parse(params);\r\n            var res = qparams\r\n            if(qparams.uuid != null){\r\n                res = { \"uuid\": mock.Random.guid(),\"name\": mock.Random.cword(5, 7),\"parentId\": mock.Random.guid(),\"code\": mock.Random.word(1, 7),\"tableName\": mock.Random.word(1, 7),\"remark\": mock.Random.csentence(2, 10),\"orderNum\": mock.Random.integer(1,10),\"tableType\":mock.Random.integer(1,2)}\r\n            }\r\n            return res;\r\n        }\r\n    }\r\n}\r\n//获取字典树\r\nexport const jsonNewsTypesTree = (data) => {\r\n    return {\r\n        url: '/rest/newsTypes/jsonNewsTypesTree',\r\n        method: 'get',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(){\r\n            return [\r\n                {\"id\":\"0\",\"value\":\"0\",\"name\":\"所有\",\"pId\":\"0\",\"isLeaf\":false,\"isParent\":true,\"data\":\"\",\"open\":true},\r\n                {\"id\":\"369b46a39e3b44f7911a58d862e8340e\",\"value\":\"369b46a39e3b44f7911a58d862e8340e\",\"name\":\"1\",\"pId\":\"0\",\"isLeaf\":true,\"isParent\":false,\"data\":\"\",\"open\":true},\r\n                {\"id\":\"1\",\"value\":\"1\",\"name\":\"技术专栏\",\"pId\":\"0\",\"isLeaf\":false,\"isParent\":true,\"data\":\"\",\"open\":true},\r\n                {\"id\":\"6\",\"value\":\"6\",\"name\":\"Web前端\",\"pId\":\"1\",\"isLeaf\":true,\"isParent\":false,\"data\":\"\",\"open\":true},\r\n                {\"id\":\"317c9f98b29f4006b45ab7ccffacd7ae\",\"value\":\"317c9f98b29f4006b45ab7ccffacd7ae\",\"name\":\"部门资讯\",\"pId\":\"1\",\"isLeaf\":false,\"isParent\":true,\"data\":\"\",\"open\":true},\r\n                {\"id\":\"aab16111569a4d1e8e94565d61fd24cf\",\"value\":\"aab16111569a4d1e8e94565d61fd24cf\",\"name\":\"业务部\",\"pId\":\"317c9f98b29f4006b45ab7ccffacd7ae\",\"isLeaf\":true,\"isParent\":false,\"data\":\"\",\"open\":true},\r\n                {\"id\":\"2111fab0b6cf497493087b4185f5ee22\",\"value\":\"2111fab0b6cf497493087b4185f5ee22\",\"name\":\"架构部\",\"pId\":\"317c9f98b29f4006b45ab7ccffacd7ae\",\"isLeaf\":true,\"isParent\":false,\"data\":\"\",\"open\":true},\r\n                {\"id\":\"159adbb4026a4e9490c09a34b420031b\",\"value\":\"159adbb4026a4e9490c09a34b420031b\",\"name\":\"Web前端\",\"pId\":\"1\",\"isLeaf\":true,\"isParent\":false,\"data\":\"\",\"open\":true},{\"id\":\"40d0264e548b4803a0c811da864f5355\",\"value\":\"40d0264e548b4803a0c811da864f5355\",\"name\":\"其他栏目\",\"pId\":\"0\",\"isLeaf\":false,\"isParent\":true,\"data\":\"\",\"open\":true},\r\n                {\"id\":\"00748fad695d4cd497d511bedd37c083\",\"value\":\"00748fad695d4cd497d511bedd37c083\",\"name\":\"技术专栏\",\"pId\":\"40d0264e548b4803a0c811da864f5355\",\"isLeaf\":true,\"isParent\":false,\"data\":\"\",\"open\":true},{\"id\":\"6fdf00061870482480e8232fef981aa2\",\"value\":\"6fdf00061870482480e8232fef981aa2\",\"name\":\"生活娱乐\",\"pId\":\"40d0264e548b4803a0c811da864f5355\",\"isLeaf\":true,\"isParent\":false,\"data\":\"\",\"open\":true},\r\n                {\"id\":\"133c82dd7e3e44a89197bcc8bb3db541\",\"value\":\"133c82dd7e3e44a89197bcc8bb3db541\",\"name\":\"其他\",\"pId\":\"40d0264e548b4803a0c811da864f5355\",\"isLeaf\":true,\"isParent\":false,\"data\":\"\",\"open\":true}\r\n            ];\r\n        }\r\n    }\r\n}\r\nexport const saveNewsTypesTree = (data) => {\r\n    return {\r\n        url: '/rest/newsTypes/saveNewsTypesTree',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(){\r\n            return null;\r\n        }\r\n    }\r\n}\r\n//生成随机分页数据\r\nfunction RandomPageData(pageSize){\r\n    var size=10;\r\n    if(pageSize){\r\n        size=pageSize;\r\n    }\r\n    var results=[];\r\n    for(var i=0;i<size;i++){\r\n        var item={ \"uuid\": mock.Random.guid(),\"name\": mock.Random.cword(5, 7),\"viewTypeId\": mock.Random.integer(1,2),\"code\": mock.Random.word(1, 7),\"tableName\": mock.Random.word(1, 7),\"description\": mock.Random.csentence(2, 10),\"orderNo\": mock.Random.integer(1,10),\"iconUrl\":mock.Random.integer(1,2),\"createTime\": mock.Random.date('yyyy-MM-dd'),\"updateTime\": mock.Random.date('yyyy-MM-dd')};\r\n        results.push(item);\r\n    }\r\n    return {\r\n        'totalRows':newstypesData.totalRows,\r\n        'results':results\r\n    };\r\n}\r\n\r\nexport const loadNewsTypesGrid = (data) => {\r\n    return {\r\n        url: '/rest/newsTypes/loadNewsTypesGrid',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            return [{\r\n              \"orderNO\" : 1,\r\n              \"uuid\" : \"1\",\r\n              \"name\" : \"技术专栏\",\r\n              \"description\" : \"技术专栏a\",\r\n              \"level\" : \"1\",\r\n              \"viewTypeId\" : \"2\",\r\n              \"iconUrl\" : \"fa fa-fw fa-clone\",\r\n              \"treeCol\" : \"33b9e37e990e6e1600650ca0d4e644b1\",\r\n              \"color\" : \"#0070C0\"\r\n            }, {\r\n              \"orderNO\" : 2,\r\n              \"uuid\" : \"2\",\r\n              \"name\" : \"生活娱乐\",\r\n              \"description\" : \"生活娱乐b\",\r\n              \"level\" : \"2\",\r\n              \"viewTypeId\" : \"2\",\r\n              \"iconUrl\" : \"fa fa-fw fa-cc-jcb\",\r\n              \"treeCol\" : \"da352a726cda71cec283cf95790c91ef\",\r\n              \"color\" : \"#00B050\"\r\n            }, {\r\n              \"orderNO\" : 3,\r\n              \"uuid\" : \"3\",\r\n              \"name\" : \"部门资讯\",\r\n              \"description\" : \"部门资讯c\",\r\n              \"level\" : \"3\",\r\n              \"viewTypeId\" : \"1\",\r\n              \"iconUrl\" : \"fa fa-fw fa-chrome\",\r\n              \"treeCol\" : \"580cf48b506eb70670df46d22ce34224\",\r\n              \"color\" : \"#FFC000\"\r\n            }, {\r\n              \"orderNO\" : 4,\r\n              \"uuid\" : \"4\",\r\n              \"name\" : \"其他栏目\",\r\n              \"description\" : \"其他栏目d\",\r\n              \"level\" : \"1\",\r\n              \"viewTypeId\" : \"1\",\r\n              \"iconUrl\" : \"fa fa-fw fa-amazon\",\r\n              \"treeCol\" : \"\",\r\n              \"color\" : \"#7030A0\"\r\n            }]\r\n        }\r\n    }\r\n}\r\nexport const saveNewsTypesGrid = (data) => {\r\n    return {\r\n        url: '/rest/newsTypes/saveNewsTypesGrid',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            return params;\r\n        }\r\n    }\r\n}\r\n\r\n"]}]}