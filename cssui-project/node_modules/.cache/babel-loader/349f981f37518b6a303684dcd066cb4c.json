{"remainingRequest":"D:\\10_vuespaces\\cssui-project\\node_modules\\babel-loader\\lib\\index.js!D:\\10_vuespaces\\cssui-project\\src\\http\\moudules\\resume.js","dependencies":[{"path":"D:\\10_vuespaces\\cssui-project\\src\\http\\moudules\\resume.js","mtime":1594287736826},{"path":"D:\\10_vuespaces\\cssui-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\10_vuespaces\\cssui-project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _mock = require('mockjs');\n\nimport qs from 'qs';\n/* \r\n * 简历管理模块\r\n */\n\nvar resumeData = {\n  totalRows: 1,\n  results: []\n};\n\nfor (var i = 0; i < resumeData.totalRows; i++) {\n  var item = {\n    \"studentUuid\": _mock.Random.guid(),\n    \"idcard\": _mock.Random.id(),\n    \"phone\": _mock.Random.integer(10000000000, 99999999999),\n    \"address\": _mock.Random.string(2, 8)\n  };\n  resumeData.results.push(item);\n} // 添加\n\n\nexport var addResume = function addResume(data) {\n  return {\n    url: '/rest/resume/addResume',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      resumeData.results.push(qparams);\n      resumeData.totalRows++;\n      qparams['uuid'] = _mock.Random.guid();\n      return qparams;\n    }\n  };\n}; //修改\n\nexport var updResume = function updResume(data) {\n  return {\n    url: '/rest/resume/updResume',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      return qparams;\n    }\n  };\n}; // 删除\n\nexport var delResume = function delResume(data) {\n  return {\n    url: '/rest/resume/delResume',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      return qparams;\n    }\n  };\n}; // 分页查询\n\nexport var dirResume = function dirResume(data) {\n  return {\n    url: '/rest/resume/dirResume',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      var rData = RandomData(qparams.page.pageSize);\n      return {\n        \"results\": rData.results,\n        \"totalRows\": rData.totalRows\n      };\n    }\n  };\n};\n\nfunction RandomData(pageSize) {\n  var size = 10;\n\n  if (pageSize) {\n    size = pageSize;\n  }\n\n  var results = [];\n\n  for (var i = 0; i < 1; i++) {\n    var item = {\n      \"studentUuid\": _mock.Random.guid(),\n      \"idcard\": _mock.Random.id(),\n      \"phone\": _mock.Random.integer(10000000000, 99999999999),\n      \"address\": _mock.Random.string(2, 8)\n    };\n    results.push(item);\n  }\n\n  return {\n    'totalRows': resumeData.totalRows,\n    'results': results\n  };\n} // 查看\n\n\nexport var getResume = function getResume(data) {\n  return {\n    url: '/rest/resume/getResume',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      var res = qparams;\n\n      if (qparams.studentUuid && qparams.studentUuid != '') {\n        res = {\n          \"studentUuid\": _mock.Random.guid(),\n          \"idcard\": _mock.Random.id(),\n          \"phone\": _mock.Random.integer(10000000000, 99999999999),\n          \"address\": _mock.Random.string(2, 8)\n        };\n      }\n\n      return res;\n    }\n  };\n};",{"version":3,"sources":["D:/10_vuespaces/cssui-project/src/http/moudules/resume.js"],"names":["mock","require","qs","resumeData","totalRows","results","i","item","Random","guid","id","integer","string","push","addResume","data","url","method","openMock","params","qparams","JSON","parse","updResume","delResume","dirResume","rData","RandomData","page","pageSize","size","getResume","res","studentUuid"],"mappings":"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","sourcesContent":["var mock = require('mockjs')\r\nimport qs from 'qs'\r\n/* \r\n * 简历管理模块\r\n */\r\n const resumeData={\r\n    totalRows:1,\r\n    results:[]\r\n}\r\nfor(var i=0;i<resumeData.totalRows;i++){\r\n    var item={ \"studentUuid\": mock.Random.guid(), \"idcard\": mock.Random.id(), \"phone\": mock.Random.integer(10000000000,99999999999),\"address\": mock.Random.string(2,8) }\r\n    resumeData.results.push(item);\r\n}\r\n// 添加\r\nexport const addResume = (data) => {\r\n    return {\r\n        url: '/rest/resume/addResume',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            resumeData.results.push(qparams);\r\n            resumeData.totalRows++;\r\n            qparams['uuid']=mock.Random.guid();\r\n            return qparams\r\n        }\r\n    }\r\n}\r\n//修改\r\nexport const updResume = (data) => {\r\n    return {\r\n        url: '/rest/resume/updResume',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            return qparams\r\n        }\r\n    }\r\n}\r\n// 删除\r\nexport const delResume = (data) => {\r\n    return {\r\n        url: '/rest/resume/delResume',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            return qparams;\r\n        }\r\n    }\r\n}\r\n// 分页查询\r\nexport const dirResume = (data) => {\r\n    return {\r\n        url: '/rest/resume/dirResume',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            var rData=RandomData(qparams.page.pageSize);\r\n            return { \r\n                \"results\": rData.results,\r\n                \"totalRows\": rData.totalRows\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction RandomData(pageSize){\r\n    var size=10;\r\n    if(pageSize){\r\n        size=pageSize;\r\n    }\r\n    var results=[];\r\n    for(var i=0;i<1;i++){\r\n        var item={\"studentUuid\": mock.Random.guid(), \"idcard\": mock.Random.id(), \"phone\": mock.Random.integer(10000000000,99999999999),\"address\": mock.Random.string(2,8) }\r\n        results.push(item);\r\n    }\r\n    return {\r\n        'totalRows':resumeData.totalRows,\r\n        'results':results\r\n    };\r\n}\r\n// 查看\r\nexport const getResume = (data) => {\r\n    return {\r\n        url: '/rest/resume/getResume',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            var res= qparams\r\n            if(qparams.studentUuid&&qparams.studentUuid!=''){\r\n                res={ \"studentUuid\": mock.Random.guid(), \"idcard\": mock.Random.id(), \"phone\": mock.Random.integer(10000000000,99999999999),\"address\": mock.Random.string(2,8) }; \r\n            }\r\n            return res;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}]}