{"remainingRequest":"D:\\10_vuespaces\\cssui-project\\node_modules\\babel-loader\\lib\\index.js!D:\\10_vuespaces\\cssui-project\\src\\http\\moudules\\persons.js","dependencies":[{"path":"D:\\10_vuespaces\\cssui-project\\src\\http\\moudules\\persons.js","mtime":1594287736824},{"path":"D:\\10_vuespaces\\cssui-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\10_vuespaces\\cssui-project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _mock = require('mockjs');\n\nimport qs from 'qs';\n/* \r\n * 人物表http请求模块\r\n */\n\nvar personsData = {\n  totalRows: 100,\n  results: []\n}; // 添加\n\nexport var addPersons = function addPersons(data) {\n  return {\n    url: '/rest/persons/addPersons',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      personsData.results.push(qparams);\n      personsData.totalRows++;\n      qparams['uuid'] = _mock.Random.guid();\n      return qparams;\n    }\n  };\n}; //修改\n\nexport var updPersons = function updPersons(data) {\n  return {\n    url: '/rest/persons/updPersons',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      return qparams;\n    }\n  };\n}; // 删除\n\nexport var delPersons = function delPersons(data) {\n  return {\n    url: '/rest/persons/delPersons',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      personsData.totalRows--;\n      return params;\n    }\n  };\n}; // 分页查询\n\nexport var dirPersons = function dirPersons(data) {\n  return {\n    url: '/rest/persons/dirPersons',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      var rData = RandomData(qparams.page.pageSize);\n      return {\n        \"results\": rData.results,\n        \"totalRows\": rData.totalRows\n      };\n    }\n  };\n}; //查看\n\nexport var getPersons = function getPersons(data) {\n  return {\n    url: '/rest/persons/getPersons',\n    method: 'get',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      ;\n      var res = {\n        \"uuid\": null,\n        \"name\": \"\",\n        \"age\": \"\",\n        \"sex\": \"\"\n      };\n\n      if (qparams.uuid && qparams.uuid != '') {\n        res = {\n          \"uuid\": _mock.Random.guid(),\n          \"name\": _mock.Random.cname(),\n          \"age\": _mock.Random.integer(10, 30),\n          \"sex\": _mock.Random.integer(1, 2)\n        };\n      }\n\n      return res;\n    }\n  };\n};\n\nfunction RandomData(pageSize) {\n  var size = 10;\n\n  if (pageSize) {\n    size = pageSize;\n  }\n\n  var results = [];\n\n  for (var i = 0; i < size; i++) {\n    var item = {\n      \"uuid\": _mock.Random.guid(),\n      \"name\": _mock.Random.cname(),\n      \"age\": _mock.Random.integer(10, 30),\n      \"sex\": _mock.Random.integer(1, 2)\n    };\n    results.push(item);\n  }\n\n  return {\n    'totalRows': personsData.totalRows,\n    'results': results\n  };\n}",{"version":3,"sources":["D:/10_vuespaces/cssui-project/src/http/moudules/persons.js"],"names":["mock","require","qs","personsData","totalRows","results","addPersons","data","url","method","openMock","params","qparams","JSON","parse","push","Random","guid","updPersons","delPersons","dirPersons","rData","RandomData","page","pageSize","getPersons","res","uuid","cname","integer","size","i","item"],"mappings":"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","sourcesContent":["var mock = require('mockjs')\r\nimport qs from 'qs'\r\n/* \r\n * 人物表http请求模块\r\n */\r\n\r\nconst personsData={\r\n    totalRows:100,\r\n    results:[]\r\n}\r\n\r\n// 添加\r\nexport const addPersons = (data) => {\r\n    return {\r\n        url: '/rest/persons/addPersons',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            personsData.results.push(qparams);\r\n            personsData.totalRows++;\r\n            qparams['uuid']=mock.Random.guid();\r\n            return qparams\r\n        }\r\n    }\r\n}\r\n//修改\r\nexport const updPersons = (data) => {\r\n    return {\r\n        url: '/rest/persons/updPersons',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            return qparams\r\n        }\r\n    }\r\n}\r\n// 删除\r\nexport const delPersons = (data) => {\r\n    return {\r\n        url: '/rest/persons/delPersons',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            personsData.totalRows--;\r\n            return params\r\n        }\r\n    }\r\n}\r\n// 分页查询\r\nexport const dirPersons = (data) => {\r\n    return {\r\n        url: '/rest/persons/dirPersons',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            var rData=RandomData(qparams.page.pageSize);\r\n            return { \r\n                \"results\": rData.results,\r\n                \"totalRows\": rData.totalRows\r\n            }\r\n        }\r\n    }\r\n}\r\n//查看\r\nexport const getPersons = (data) => {\r\n    return {\r\n        url: '/rest/persons/getPersons',\r\n        method: 'get',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){ \r\n            var qparams=JSON.parse(params);;\r\n            var res={ \"uuid\": null, \"name\": \"\",\"age\": \"\",\"sex\": \"\"} \r\n            if(qparams.uuid&&qparams.uuid!=''){\r\n                res={ \"uuid\": mock.Random.guid(), \"name\": mock.Random.cname(), \"age\": mock.Random.integer(10,30),\"sex\": mock.Random.integer(1,2)}\r\n            }\r\n            return res;\r\n        }\r\n    }\r\n}\r\n\r\nfunction RandomData(pageSize){\r\n    var size=10;\r\n    if(pageSize){\r\n        size=pageSize;\r\n    }\r\n    var results=[];\r\n    for(var i=0;i<size;i++){\r\n        var item={ \"uuid\": mock.Random.guid(), \"name\": mock.Random.cname(), \"age\": mock.Random.integer(10,30),\"sex\": mock.Random.integer(1,2)}\r\n        results.push(item);\r\n    }\r\n    return {\r\n        'totalRows':personsData.totalRows,\r\n        'results':results\r\n    };\r\n}\r\n"]}]}