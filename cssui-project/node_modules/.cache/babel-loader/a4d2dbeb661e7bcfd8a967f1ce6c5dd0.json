{"remainingRequest":"D:\\10_vuespaces\\cssui-project\\node_modules\\babel-loader\\lib\\index.js!D:\\10_vuespaces\\cssui-project\\src\\http\\moudules\\phone.js","dependencies":[{"path":"D:\\10_vuespaces\\cssui-project\\src\\http\\moudules\\phone.js","mtime":1594287736824},{"path":"D:\\10_vuespaces\\cssui-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\10_vuespaces\\cssui-project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _mock = require('mockjs');\n\nimport qs from 'qs';\n/* \r\n * 电话号码http请求模块\r\n */\n\nvar phoneData = {\n  totalRows: 10,\n  results: []\n};\n\nfunction RandomData(pageSize) {\n  var size = phoneData.totalRows;\n\n  if (pageSize) {\n    size = pageSize;\n  }\n\n  var results = [];\n\n  for (var i = 0; i < size; i++) {\n    var item = {\n      \"uuid\": _mock.Random.guid(),\n      \"number\": _mock.Random.integer(11)\n    };\n    results.push(item);\n  }\n\n  return {\n    'totalRows': phoneData.totalRows,\n    'results': results\n  };\n} // 添加\n\n\nexport var addPhone = function addPhone(data) {\n  return {\n    url: '/rest/phone/addPhone',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      phoneData.results.push(qparams);\n      phoneData.totalRows++;\n      qparams['uuid'] = _mock.Random.guid();\n      return qparams;\n    }\n  };\n}; //修改\n\nexport var updPhone = function updPhone(data) {\n  return {\n    url: '/rest/phone/updPhone',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      return qparams;\n    }\n  };\n}; // 删除\n\nexport var delPhone = function delPhone(data) {\n  return {\n    url: '/rest/phone/delPhone',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      phoneData.totalRows--;\n      return params;\n    }\n  };\n}; // 分页查询\n\nexport var dirPhone = function dirPhone(data) {\n  return {\n    url: '/rest/phone/dirPhone',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      var rData = RandomData(qparams.page.pageSize);\n      return {\n        \"results\": rData.results,\n        \"totalRows\": rData.totalRows\n      };\n    }\n  };\n}; //查看\n\nexport var getPhone = function getPhone(data) {\n  return {\n    url: '/rest/phone/getPhone',\n    method: 'get',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      ;\n      var res = {\n        \"uuid\": null,\n        \"number\": \"\"\n      };\n\n      if (qparams.uuid && qparams.uuid != '') {\n        res = {\n          \"uuid\": _mock.Random.guid(),\n          \"number\": _mock.Random.integer(11)\n        };\n      }\n\n      return res;\n    }\n  };\n};",{"version":3,"sources":["D:/10_vuespaces/cssui-project/src/http/moudules/phone.js"],"names":["mock","require","qs","phoneData","totalRows","results","RandomData","pageSize","size","i","item","Random","guid","integer","push","addPhone","data","url","method","openMock","params","qparams","JSON","parse","updPhone","delPhone","dirPhone","rData","page","getPhone","res","uuid"],"mappings":"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","sourcesContent":["var mock = require('mockjs')\r\nimport qs from 'qs'\r\n/* \r\n * 电话号码http请求模块\r\n */\r\n\r\nconst phoneData={\r\n    totalRows:10,\r\n    results:[]\r\n}\r\n\r\nfunction RandomData(pageSize){\r\n    var size=phoneData.totalRows;\r\n    if(pageSize){\r\n        size=pageSize;\r\n    }\r\n    var results=[];\r\n    for(var i=0;i<size;i++){\r\n        var item={ \"uuid\": mock.Random.guid(), \"number\": mock.Random.integer(11)}\r\n        results.push(item);\r\n    }\r\n    return {\r\n        'totalRows':phoneData.totalRows,\r\n        'results':results\r\n    };\r\n}\r\n\r\n// 添加\r\nexport const addPhone = (data) => {\r\n    return {\r\n        url: '/rest/phone/addPhone',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            phoneData.results.push(qparams);\r\n            phoneData.totalRows++;\r\n            qparams['uuid']=mock.Random.guid();\r\n            return qparams\r\n        }\r\n    }\r\n}\r\n//修改\r\nexport const updPhone = (data) => {\r\n    return {\r\n        url: '/rest/phone/updPhone',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            return qparams\r\n        }\r\n    }\r\n}\r\n// 删除\r\nexport const delPhone = (data) => {\r\n    return {\r\n        url: '/rest/phone/delPhone',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            phoneData.totalRows--;\r\n            return params\r\n        }\r\n    }\r\n}\r\n// 分页查询\r\nexport const dirPhone = (data) => {\r\n    return {\r\n        url: '/rest/phone/dirPhone',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            var rData=RandomData(qparams.page.pageSize);\r\n            return { \r\n                \"results\": rData.results,\r\n                \"totalRows\": rData.totalRows\r\n            }\r\n        }\r\n    }\r\n}\r\n//查看\r\nexport const getPhone = (data) => {\r\n    return {\r\n        url: '/rest/phone/getPhone',\r\n        method: 'get',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){ \r\n            var qparams=JSON.parse(params);;\r\n            var res={ \"uuid\": null, \"number\": \"\"} \r\n            if(qparams.uuid&&qparams.uuid!=''){\r\n                res={ \"uuid\": mock.Random.guid(), \"number\": mock.Random.integer(11)}\r\n            }\r\n            return res;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}]}