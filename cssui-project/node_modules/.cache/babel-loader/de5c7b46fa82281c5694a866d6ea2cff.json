{"remainingRequest":"D:\\10_vuespaces\\cssui-project\\node_modules\\babel-loader\\lib\\index.js!D:\\10_vuespaces\\cssui-project\\src\\http\\moudules\\employee.js","dependencies":[{"path":"D:\\10_vuespaces\\cssui-project\\src\\http\\moudules\\employee.js","mtime":1594287736814},{"path":"D:\\10_vuespaces\\cssui-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\10_vuespaces\\cssui-project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _mock = require('mockjs');\n\nimport qs from 'qs';\n/* \r\n * 员工管理模块\r\n */\n\nvar employeeData = {\n  totalRows: 100,\n  results: []\n};\n\nfor (var i = 0; i < employeeData.totalRows; i++) {\n  var item = {\n    \"uuid\": _mock.Random.guid(),\n    \"name\": _mock.Random.cname(),\n    \"sex\": _mock.Random.integer(1, 2),\n    \"phone\": _mock.Random.integer(10000000000, 99999999999),\n    \"age\": _mock.Random.integer(20, 100),\n    \"birth\": _mock.Random.date('yyyy-MM-dd'),\n    \"idCrad\": _mock.Random.id(),\n    \"depart\": _mock.Random.cword(5, 7),\n    \"type\": _mock.Random.integer(1, 6)\n  };\n  employeeData.results.push(item);\n} // 添加\n\n\nexport var addEmployee = function addEmployee(data) {\n  return {\n    url: '/rest/employee/addEmployee',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      debugger;\n      var qparams = JSON.parse(params);\n      employeeData.results.push(qparams);\n      employeeData.totalRows++;\n      qparams['uuid'] = _mock.Random.guid();\n      return qparams;\n    }\n  };\n}; //修改\n\nexport var updEmployee = function updEmployee(data) {\n  return {\n    url: '/rest/employee/updEmployee',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      return qparams;\n    }\n  };\n}; // 删除\n\nexport var delEmployee = function delEmployee(data) {\n  return {\n    url: '/rest/employee/delEmployee',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      ;\n      return qparams;\n    }\n  };\n}; // 分页查询\n\nexport var dirEmployee = function dirEmployee(data) {\n  return {\n    url: '/rest/employee/dirEmployee',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      var rData = RandomData(qparams.page.pageSize);\n      return {\n        \"results\": rData.results,\n        \"totalRows\": rData.totalRows\n      };\n    }\n  };\n};\n\nfunction RandomData(pageSize) {\n  var size = 10;\n\n  if (pageSize) {\n    size = pageSize;\n  }\n\n  var results = [];\n\n  for (var i = 0; i < size; i++) {\n    var item = {\n      \"uuid\": _mock.Random.guid(),\n      \"name\": _mock.Random.cname(),\n      \"sex\": _mock.Random.integer(1, 2),\n      \"phone\": _mock.Random.integer(10000000000, 99999999999),\n      \"age\": _mock.Random.integer(20, 100),\n      \"birth\": _mock.Random.date('yyyy-MM-dd'),\n      \"idCrad\": _mock.Random.id(),\n      \"depart\": _mock.Random.cword(5, 7),\n      \"type\": _mock.Random.integer(1, 6)\n    };\n    results.push(item);\n  }\n\n  return {\n    'totalRows': employeeData.totalRows,\n    'results': results\n  };\n} // 查看\n\n\nexport var getEmployee = function getEmployee(data) {\n  return {\n    url: '/rest/employee/getEmployee',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      ;\n      var res = {\n        \"uuid\": null,\n        \"name\": \"\",\n        \"sex\": \"1\",\n        \"age\": 0,\n        \"birth\": _mock.Random.date('yyyy-MM-dd'),\n        \"phone\": '',\n        \"idCrad\": \"\",\n        \"depart\": \"\",\n        \"type\": \"1\"\n      };\n\n      if (qparams.uuid && qparams.uuid != '') {\n        res = {\n          \"uuid\": _mock.Random.guid(),\n          \"name\": _mock.Random.cname(),\n          \"sex\": _mock.Random.integer(1, 2),\n          \"phone\": _mock.Random.integer(10000000000, 99999999999),\n          \"age\": _mock.Random.integer(20, 100),\n          \"birth\": _mock.Random.date('yyyy-MM-dd'),\n          \"idCrad\": _mock.Random.id(),\n          \"depart\": _mock.Random.cword(5, 7),\n          \"type\": _mock.Random.integer(1, 6)\n        };\n      }\n\n      return res;\n    }\n  };\n};",{"version":3,"sources":["D:/10_vuespaces/cssui-project/src/http/moudules/employee.js"],"names":["mock","require","qs","employeeData","totalRows","results","i","item","Random","guid","cname","integer","date","id","cword","push","addEmployee","data","url","method","openMock","params","qparams","JSON","parse","updEmployee","delEmployee","dirEmployee","rData","RandomData","page","pageSize","size","getEmployee","res","uuid"],"mappings":"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","sourcesContent":["var mock = require('mockjs')\r\nimport qs from 'qs'\r\n/* \r\n * 员工管理模块\r\n */\r\n const employeeData={\r\n    totalRows:100,\r\n    results:[]\r\n}\r\nfor(var i=0;i<employeeData.totalRows;i++){\r\n    var item={ \"uuid\": mock.Random.guid(), \"name\": mock.Random.cname(), \"sex\": mock.Random.integer(1,2),\"phone\":mock.Random.integer(10000000000,99999999999),\"age\": mock.Random.integer(20,100), \"birth\": mock.Random.date('yyyy-MM-dd'), \"idCrad\": mock.Random.id(), \"depart\": mock.Random.cword(5, 7), \"type\": mock.Random.integer(1,6) }\r\n    employeeData.results.push(item);\r\n}\r\n// 添加\r\nexport const addEmployee = (data) => {\r\n    return {\r\n        url: '/rest/employee/addEmployee',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            debugger\r\n            var qparams=JSON.parse(params);\r\n            employeeData.results.push(qparams);\r\n            employeeData.totalRows++;\r\n            qparams['uuid']=mock.Random.guid();\r\n            return qparams\r\n        }\r\n    }\r\n}\r\n//修改\r\nexport const updEmployee = (data) => {\r\n    return {\r\n        url: '/rest/employee/updEmployee',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            return qparams\r\n        }\r\n    }\r\n}\r\n// 删除\r\nexport const delEmployee = (data) => {\r\n    return {\r\n        url: '/rest/employee/delEmployee',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params); ;\r\n            return qparams\r\n        }\r\n    }\r\n}\r\n// 分页查询\r\nexport const dirEmployee = (data) => {\r\n    return {\r\n        url: '/rest/employee/dirEmployee',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            var rData=RandomData(qparams.page.pageSize);\r\n            return { \r\n                \"results\": rData.results,\r\n                \"totalRows\": rData.totalRows\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction RandomData(pageSize){\r\n    var size=10;\r\n    if(pageSize){\r\n        size=pageSize;\r\n    }\r\n    var results=[];\r\n    for(var i=0;i<size;i++){\r\n        var item={ \"uuid\": mock.Random.guid(), \"name\": mock.Random.cname(), \"sex\": mock.Random.integer(1,2),\"phone\":mock.Random.integer(10000000000,99999999999),\"age\": mock.Random.integer(20,100), \"birth\": mock.Random.date('yyyy-MM-dd'), \"idCrad\": mock.Random.id(), \"depart\": mock.Random.cword(5, 7), \"type\": mock.Random.integer(1,6) }\r\n        results.push(item);\r\n    }\r\n    return {\r\n        'totalRows':employeeData.totalRows,\r\n        'results':results\r\n    };\r\n}\r\n// 查看\r\nexport const getEmployee = (data) => {\r\n    return {\r\n        url: '/rest/employee/getEmployee',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);;\r\n            var res={ \"uuid\": null, \"name\": \"\", \"sex\": \"1\", \"age\": 0, \"birth\": mock.Random.date('yyyy-MM-dd'), \"phone\":'',\"idCrad\": \"\", \"depart\": \"\", \"type\": \"1\" } \r\n            if(qparams.uuid&&qparams.uuid!=''){\r\n                res={ \"uuid\": mock.Random.guid(), \"name\": mock.Random.cname(), \"sex\": mock.Random.integer(1,2),\"phone\":mock.Random.integer(10000000000,99999999999), \"age\": mock.Random.integer(20,100), \"birth\": mock.Random.date('yyyy-MM-dd'), \"idCrad\": mock.Random.id(), \"depart\": mock.Random.cword(5, 7), \"type\": mock.Random.integer(1,6) }; \r\n            }\r\n            return res;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}]}