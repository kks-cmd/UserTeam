{"remainingRequest":"D:\\10_vuespaces\\cssui-project\\node_modules\\babel-loader\\lib\\index.js!D:\\10_vuespaces\\cssui-project\\src\\http\\moudules\\job.js","dependencies":[{"path":"D:\\10_vuespaces\\cssui-project\\src\\http\\moudules\\job.js","mtime":1594287736818},{"path":"D:\\10_vuespaces\\cssui-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\10_vuespaces\\cssui-project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _mock = require('mockjs');\n/* \r\n * 工作经历管理模块\r\n */\n\n\nvar jobData = {\n  totalRows: 100,\n  results: []\n};\n\nfor (var i = 0; i < jobData.totalRows; i++) {\n  var item = {\n    \"uuid\": _mock.Random.guid(),\n    \"studentUuid\": _mock.Random.guid(),\n    \"startDate\": _mock.Random.date('yyyy-MM-dd'),\n    \"endDate\": _mock.Random.date('yyyy-MM-dd'),\n    \"company\": _mock.Random.string(2, 6)\n  };\n  jobData.results.push(item);\n} // 添加\n\n\nexport var addJob = function addJob(data) {\n  return {\n    url: '/rest/job/addJob',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      jobData.results.push(qparams);\n      jobData.totalRows++;\n      qparams['uuid'] = _mock.Random.guid();\n      return qparams;\n    }\n  };\n}; //修改\n\nexport var updJob = function updJob(data) {\n  return {\n    url: '/rest/job/updJob',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      return qparams;\n    }\n  };\n}; // 删除\n\nexport var delJob = function delJob(data) {\n  return {\n    url: '/rest/job/delJob',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      return qparams;\n    }\n  };\n}; // 分页查询\n\nexport var dirJob = function dirJob(data) {\n  return {\n    url: '/rest/job/dirJob',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      var qparams = JSON.parse(params);\n      var rData = RandomData(qparams.page.pageSize);\n      return rData;\n    }\n  };\n};\n\nfunction RandomData(pageSize) {\n  var size = 10;\n\n  if (pageSize) {\n    size = pageSize;\n  }\n\n  var results = [];\n\n  for (var i = 0; i < size; i++) {\n    var item = {\n      \"uuid\": _mock.Random.guid(),\n      \"studentUuid\": _mock.Random.guid(),\n      \"startDate\": _mock.Random.date('yyyy-MM-dd'),\n      \"endDate\": _mock.Random.date('yyyy-MM-dd'),\n      \"company\": _mock.Random.string(2, 6)\n    };\n    results.push(item);\n  }\n\n  return {\n    'totalRows': jobData.totalRows,\n    'results': results\n  };\n} // 查看\n\n\nexport var getJob = function getJob(data) {\n  return {\n    url: '/rest/job/getJob',\n    method: 'post',\n    data: data,\n    openMock: true,\n    mock: function mock(params) {\n      debugger;\n      var qparams = JSON.parse(params);\n      var res = qparams;\n\n      if (qparams.uuid && qparams.uuid != '') {\n        res = {\n          \"uuid\": _mock.Random.guid(),\n          \"studentUuid\": _mock.Random.guid(),\n          \"startDate\": _mock.Random.date('yyyy-MM-dd'),\n          \"endDate\": _mock.Random.date('yyyy-MM-dd'),\n          \"company\": _mock.Random.string(2, 6)\n        };\n      }\n\n      return res;\n    }\n  };\n};",{"version":3,"sources":["D:/10_vuespaces/cssui-project/src/http/moudules/job.js"],"names":["mock","require","jobData","totalRows","results","i","item","Random","guid","date","string","push","addJob","data","url","method","openMock","params","qparams","JSON","parse","updJob","delJob","dirJob","rData","RandomData","page","pageSize","size","getJob","res","uuid"],"mappings":"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","sourcesContent":["var mock = require('mockjs')\r\n/* \r\n * 工作经历管理模块\r\n */\r\n const jobData={\r\n    totalRows:100,\r\n    results:[]\r\n}\r\nfor(var i=0;i<jobData.totalRows;i++){\r\n    var item={ \"uuid\": mock.Random.guid(), \"studentUuid\": mock.Random.guid(), \"startDate\": mock.Random.date('yyyy-MM-dd'), \"endDate\": mock.Random.date('yyyy-MM-dd'),\"company\":mock.Random.string(2,6)}\r\n    jobData.results.push(item);\r\n}\r\n// 添加\r\nexport const addJob = (data) => {\r\n    return {\r\n        url: '/rest/job/addJob',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            jobData.results.push(qparams);\r\n            jobData.totalRows++;\r\n            qparams['uuid']=mock.Random.guid();\r\n            return qparams\r\n        }\r\n    }\r\n}\r\n//修改\r\nexport const updJob = (data) => {\r\n    return {\r\n        url: '/rest/job/updJob',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            return qparams\r\n        }\r\n    }\r\n}\r\n// 删除\r\nexport const delJob = (data) => {\r\n    return {\r\n        url: '/rest/job/delJob',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            return qparams\r\n        }\r\n    }\r\n}\r\n// 分页查询\r\nexport const dirJob = (data) => {\r\n    return {\r\n        url: '/rest/job/dirJob',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            var qparams=JSON.parse(params);\r\n            var rData=RandomData(qparams.page.pageSize);\r\n            return rData\r\n        }\r\n    }\r\n}\r\nfunction RandomData(pageSize){\r\n    var size=10;\r\n    if(pageSize){\r\n        size=pageSize;\r\n    }\r\n    var results=[];\r\n    for(var i=0;i<size;i++){\r\n        var item={  \"uuid\": mock.Random.guid(), \"studentUuid\": mock.Random.guid(), \"startDate\": mock.Random.date('yyyy-MM-dd'), \"endDate\": mock.Random.date('yyyy-MM-dd'),\"company\":mock.Random.string(2,6)}\r\n         results.push(item);\r\n    }\r\n    return {\r\n        'totalRows':jobData.totalRows,\r\n        'results':results\r\n    };\r\n}\r\n// 查看\r\nexport const getJob = (data) => {\r\n    return {\r\n        url: '/rest/job/getJob',\r\n        method: 'post',\r\n        data:data,\r\n        openMock:true,\r\n        mock:function(params){\r\n            debugger\r\n            var qparams=JSON.parse(params);\r\n            var res= qparams;\r\n            if(qparams.uuid&&qparams.uuid!=''){\r\n                res={\"uuid\": mock.Random.guid(), \"studentUuid\": mock.Random.guid(), \"startDate\": mock.Random.date('yyyy-MM-dd'), \"endDate\": mock.Random.date('yyyy-MM-dd'),\"company\":mock.Random.string(2,6)}; \r\n            }\r\n            return res;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}]}